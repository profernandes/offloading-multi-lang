# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import image_pb2 as image__pb2


class FilterGRPCStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GrayscaleFilter = channel.unary_unary(
        '/benchimage.FilterGRPC/GrayscaleFilter',
        request_serializer=image__pb2.ImageGRPC.SerializeToString,
        response_deserializer=image__pb2.ImageGRPC.FromString,
        )
    self.InvertFilter = channel.unary_unary(
        '/benchimage.FilterGRPC/InvertFilter',
        request_serializer=image__pb2.ImageGRPC.SerializeToString,
        response_deserializer=image__pb2.ImageGRPC.FromString,
        )
    self.CartoonFilter = channel.unary_unary(
        '/benchimage.FilterGRPC/CartoonFilter',
        request_serializer=image__pb2.ImageGRPC.SerializeToString,
        response_deserializer=image__pb2.ImageGRPC.FromString,
        )
    self.PencilFilter = channel.unary_unary(
        '/benchimage.FilterGRPC/PencilFilter',
        request_serializer=image__pb2.ImageGRPC.SerializeToString,
        response_deserializer=image__pb2.ImageGRPC.FromString,
        )
    self.SobelFilter = channel.unary_unary(
        '/benchimage.FilterGRPC/SobelFilter',
        request_serializer=image__pb2.ImageGRPC.SerializeToString,
        response_deserializer=image__pb2.ImageGRPC.FromString,
        )


class FilterGRPCServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GrayscaleFilter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InvertFilter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CartoonFilter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PencilFilter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SobelFilter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FilterGRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GrayscaleFilter': grpc.unary_unary_rpc_method_handler(
          servicer.GrayscaleFilter,
          request_deserializer=image__pb2.ImageGRPC.FromString,
          response_serializer=image__pb2.ImageGRPC.SerializeToString,
      ),
      'InvertFilter': grpc.unary_unary_rpc_method_handler(
          servicer.InvertFilter,
          request_deserializer=image__pb2.ImageGRPC.FromString,
          response_serializer=image__pb2.ImageGRPC.SerializeToString,
      ),
      'CartoonFilter': grpc.unary_unary_rpc_method_handler(
          servicer.CartoonFilter,
          request_deserializer=image__pb2.ImageGRPC.FromString,
          response_serializer=image__pb2.ImageGRPC.SerializeToString,
      ),
      'PencilFilter': grpc.unary_unary_rpc_method_handler(
          servicer.PencilFilter,
          request_deserializer=image__pb2.ImageGRPC.FromString,
          response_serializer=image__pb2.ImageGRPC.SerializeToString,
      ),
      'SobelFilter': grpc.unary_unary_rpc_method_handler(
          servicer.SobelFilter,
          request_deserializer=image__pb2.ImageGRPC.FromString,
          response_serializer=image__pb2.ImageGRPC.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'benchimage.FilterGRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
