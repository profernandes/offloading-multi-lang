// Code generated by protoc-gen-go. DO NOT EDIT.
// source: matrix.proto

package gprotomatrix

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InMatrices struct {
	Rows                 int32    `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols                 int32    `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
	Mat1Data             []int32  `protobuf:"varint,3,rep,packed,name=mat1_data,json=mat1Data,proto3" json:"mat1_data,omitempty"`
	Mat2Data             []int32  `protobuf:"varint,4,rep,packed,name=mat2_data,json=mat2Data,proto3" json:"mat2_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InMatrices) Reset()         { *m = InMatrices{} }
func (m *InMatrices) String() string { return proto.CompactTextString(m) }
func (*InMatrices) ProtoMessage()    {}
func (*InMatrices) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6d5c42dfed1acc0, []int{0}
}

func (m *InMatrices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InMatrices.Unmarshal(m, b)
}
func (m *InMatrices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InMatrices.Marshal(b, m, deterministic)
}
func (m *InMatrices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InMatrices.Merge(m, src)
}
func (m *InMatrices) XXX_Size() int {
	return xxx_messageInfo_InMatrices.Size(m)
}
func (m *InMatrices) XXX_DiscardUnknown() {
	xxx_messageInfo_InMatrices.DiscardUnknown(m)
}

var xxx_messageInfo_InMatrices proto.InternalMessageInfo

func (m *InMatrices) GetRows() int32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *InMatrices) GetCols() int32 {
	if m != nil {
		return m.Cols
	}
	return 0
}

func (m *InMatrices) GetMat1Data() []int32 {
	if m != nil {
		return m.Mat1Data
	}
	return nil
}

func (m *InMatrices) GetMat2Data() []int32 {
	if m != nil {
		return m.Mat2Data
	}
	return nil
}

type OutMatrix struct {
	Rows                 int32    `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols                 int32    `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
	Data                 []int32  `protobuf:"varint,3,rep,packed,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutMatrix) Reset()         { *m = OutMatrix{} }
func (m *OutMatrix) String() string { return proto.CompactTextString(m) }
func (*OutMatrix) ProtoMessage()    {}
func (*OutMatrix) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6d5c42dfed1acc0, []int{1}
}

func (m *OutMatrix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutMatrix.Unmarshal(m, b)
}
func (m *OutMatrix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutMatrix.Marshal(b, m, deterministic)
}
func (m *OutMatrix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutMatrix.Merge(m, src)
}
func (m *OutMatrix) XXX_Size() int {
	return xxx_messageInfo_OutMatrix.Size(m)
}
func (m *OutMatrix) XXX_DiscardUnknown() {
	xxx_messageInfo_OutMatrix.DiscardUnknown(m)
}

var xxx_messageInfo_OutMatrix proto.InternalMessageInfo

func (m *OutMatrix) GetRows() int32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *OutMatrix) GetCols() int32 {
	if m != nil {
		return m.Cols
	}
	return 0
}

func (m *OutMatrix) GetData() []int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*InMatrices)(nil), "gprotomatrix.InMatrices")
	proto.RegisterType((*OutMatrix)(nil), "gprotomatrix.OutMatrix")
}

func init() {
	proto.RegisterFile("matrix.proto", fileDescriptor_a6d5c42dfed1acc0)
}

var fileDescriptor_a6d5c42dfed1acc0 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x4d, 0x2c, 0x29,
	0xca, 0xac, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0x07, 0xd3, 0x10, 0x31, 0xa5,
	0x3c, 0x2e, 0x2e, 0xcf, 0x3c, 0x5f, 0x10, 0x3b, 0x39, 0xb5, 0x58, 0x48, 0x88, 0x8b, 0xa5, 0x28,
	0xbf, 0xbc, 0x58, 0x82, 0x51, 0x81, 0x51, 0x83, 0x35, 0x08, 0xcc, 0x06, 0x89, 0x25, 0xe7, 0xe7,
	0x14, 0x4b, 0x30, 0x41, 0xc4, 0x40, 0x6c, 0x21, 0x69, 0x2e, 0x4e, 0xa0, 0x7e, 0xc3, 0xf8, 0x94,
	0xc4, 0x92, 0x44, 0x09, 0x66, 0x05, 0x66, 0xa0, 0x04, 0x07, 0x48, 0xc0, 0x05, 0xc8, 0x87, 0x4a,
	0x1a, 0x41, 0x24, 0x59, 0xe0, 0x92, 0x46, 0x20, 0x49, 0x25, 0x77, 0x2e, 0x4e, 0xff, 0xd2, 0x12,
	0xb0, 0x85, 0x15, 0x44, 0x5b, 0x07, 0x14, 0x43, 0xb2, 0x09, 0xcc, 0x36, 0xea, 0x64, 0xe4, 0xe2,
	0xf2, 0x2f, 0x48, 0x2d, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x16, 0xb2, 0xe2, 0x62, 0x76, 0x4c,
	0x49, 0x11, 0x92, 0xd0, 0x43, 0xf6, 0x9d, 0x1e, 0xc2, 0x6b, 0x52, 0xe2, 0xa8, 0x32, 0x70, 0x47,
	0x28, 0x31, 0x08, 0xd9, 0x73, 0x71, 0xf8, 0x96, 0xe6, 0x94, 0x64, 0x16, 0xe4, 0x54, 0x92, 0x65,
	0x40, 0x12, 0x1b, 0x58, 0xc2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x12, 0xd4, 0x5a, 0x69,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OperationsClient is the client API for Operations service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OperationsClient interface {
	Add(ctx context.Context, in *InMatrices, opts ...grpc.CallOption) (*OutMatrix, error)
	Multiply(ctx context.Context, in *InMatrices, opts ...grpc.CallOption) (*OutMatrix, error)
}

type operationsClient struct {
	cc grpc.ClientConnInterface
}

func NewOperationsClient(cc grpc.ClientConnInterface) OperationsClient {
	return &operationsClient{cc}
}

func (c *operationsClient) Add(ctx context.Context, in *InMatrices, opts ...grpc.CallOption) (*OutMatrix, error) {
	out := new(OutMatrix)
	err := c.cc.Invoke(ctx, "/gprotomatrix.Operations/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationsClient) Multiply(ctx context.Context, in *InMatrices, opts ...grpc.CallOption) (*OutMatrix, error) {
	out := new(OutMatrix)
	err := c.cc.Invoke(ctx, "/gprotomatrix.Operations/Multiply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OperationsServer is the server API for Operations service.
type OperationsServer interface {
	Add(context.Context, *InMatrices) (*OutMatrix, error)
	Multiply(context.Context, *InMatrices) (*OutMatrix, error)
}

// UnimplementedOperationsServer can be embedded to have forward compatible implementations.
type UnimplementedOperationsServer struct {
}

func (*UnimplementedOperationsServer) Add(ctx context.Context, req *InMatrices) (*OutMatrix, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedOperationsServer) Multiply(ctx context.Context, req *InMatrices) (*OutMatrix, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Multiply not implemented")
}

func RegisterOperationsServer(s *grpc.Server, srv OperationsServer) {
	s.RegisterService(&_Operations_serviceDesc, srv)
}

func _Operations_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InMatrices)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationsServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gprotomatrix.Operations/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationsServer).Add(ctx, req.(*InMatrices))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operations_Multiply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InMatrices)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationsServer).Multiply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gprotomatrix.Operations/Multiply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationsServer).Multiply(ctx, req.(*InMatrices))
	}
	return interceptor(ctx, in, info, handler)
}

var _Operations_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gprotomatrix.Operations",
	HandlerType: (*OperationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Operations_Add_Handler,
		},
		{
			MethodName: "Multiply",
			Handler:    _Operations_Multiply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "matrix.proto",
}
